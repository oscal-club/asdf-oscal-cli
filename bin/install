#!/usr/bin/env bash

# global for error reporting
ASDF_OSCALCLI_ERROR=""

# Download Maven source from Apache, build, copy files and cleanup.
install_oscalcli() {
	local version=$1
	local destdir=$2

	get_oscalcli $version $destdir
	[[ -z "$ASDF_OSCALCLI_ERROR" ]] || return

	build_copy_cleanup $version $destdir
}

# Download oscal-cli from upstream usnistgov Maven repo.
#
# TODO: Capture errors from curl.
get_oscalcli() {
	local version=$1
	local destdir=$2

	if [[ $version == *"-"* ]]; then
		local base="https://oss.sonatype.org/content/repositories/snapshots/gov/nist/secauto/oscal/tools/oscal-cli/cli-core"
		IFS='-'
		read -a version_parts <<< "${version}"
		local url="$base/${version_parts[0]}-SNAPSHOT/cli-core-${version}-oscal-cli.tar.bz2"
		unset IFS
	else
		local base="https://repo1.maven.org/maven2/gov/nist/secauto/oscal/tools/oscal-cli/cli-core"
		local url="$base/$version/cli-core-$version-oscal-cli.tar.bz2"
	fi

	curl -fLC - --retry 3 --retry-delay 3 -o "$destdir/$version.tar.bz2" "$url"
}

# Build Maven, copy files and cleanup.
build_copy_cleanup() {
	local version=$1
	local destdir=$2

	local origin=$(pwd)
	cd "$destdir"; {
		tar xvjf $version.tar.bz2
		rm $version.tar.bz2
	}
	cd $origin
}

#
# MAIN
#
install_oscalcli $ASDF_INSTALL_VERSION $ASDF_INSTALL_PATH

[[ -z "$ASDF_OSCALCLI_ERROR" ]] || echo "ERROR: $ASDF_OSCALCLI_ERROR."
unset ASDF_OSCALCLI_ERROR
